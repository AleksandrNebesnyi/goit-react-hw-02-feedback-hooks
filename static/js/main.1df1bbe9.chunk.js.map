{"version":3,"sources":["Statistics/Statistics.module.css","CreateFeedbackButton/CreatefeedbackButton.module.css","Section/Section.module.css","Section/Section.jsx","Statistics/Statistics.jsx","CreateFeedbackButton/CreateFeedbackButton.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","item","value","CreatefeedbackButton","clickButtonFeedback","list","button","type","name","onClick","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","console","log","state","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1df1bbe9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1kvRl\",\"value\":\"Statistics_value__3Gw8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CreatefeedbackButton_list__1Nj01\",\"item\":\"CreatefeedbackButton_item__3l7Wp\",\"button\":\"CreatefeedbackButton_button__2860d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1C-DT\",\"title\":\"Section_title__o_C7m\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p className={s.item}>\n        Good: <span className={s.value}>{good}</span>\n      </p>\n      <p className={s.item}>\n        Neutral: <span className={s.value}>{neutral}</span>{' '}\n      </p>\n      <p className={s.item}>\n        Bad: <span className={s.value}> {bad}</span>{' '}\n      </p>\n      <p className={s.item}>\n        Total: <span className={s.value}> {total()}</span>{' '}\n      </p>\n      <p className={s.item}>\n        {' '}\n        Percentage: <span className={s.value}>{positivePercentage()}</span> %\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.func,\n  positivePercentage: PropTypes.func,\n};\n\nexport default Statistics;\n","import s from './CreatefeedbackButton.module.css';\nimport PropTypes from 'prop-types';\n\nconst CreatefeedbackButton = ({ good, neutral, bad, clickButtonFeedback }) => {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>\n        <button\n          className={s.button}\n          type=\"button\"\n          name={good}\n          onClick={clickButtonFeedback}\n        >\n          {good}\n        </button>\n      </li>\n      <li className={s.item}>\n        <button\n          className={s.button}\n          type=\"button\"\n          name={neutral}\n          onClick={clickButtonFeedback}\n        >\n          {neutral}\n        </button>\n      </li>\n      <li className={s.item}>\n        <button\n          className={s.button}\n          type=\"button\"\n          name={bad}\n          onClick={clickButtonFeedback}\n        >\n          {bad}\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nCreatefeedbackButton.propTypes = {\n  good: PropTypes.string,\n  neutral: PropTypes.string,\n  bad: PropTypes.string,\n  clickButtonFeedback: PropTypes.func,\n};\n\nexport default CreatefeedbackButton;\n","import { useState, useEffect } from 'react';\nimport Section from './Section/Section.jsx';\nimport Statistics from './Statistics/Statistics.jsx';\nimport CreatefeedbackButton from './CreateFeedbackButton/CreateFeedbackButton.jsx';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClickButton = event => {\n    const name = event.target.name;\n    console.log(event.target);\n    console.log(name);\n    switch (name) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    if (good === 0) return 0;\n    return Math.floor((good / countTotalFeedback()) * 100);\n  };\n\n  // useEffect(() => {\n  //   const countTotalFeedback = () => {\n  //     return good + neutral + bad;\n  //   };\n  // }, [good, neutral, bad]);\n\n  return (\n    <>\n      <Section title=\"Please Leave Feedback\">\n        <CreatefeedbackButton\n          good=\"good\"\n          neutral=\"neutral\"\n          bad=\"bad\"\n          clickButtonFeedback={handleClickButton}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback}\n          positivePercentage={countPositiveFeedbackPercentage}\n        />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}